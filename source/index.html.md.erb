---
title: Open Webslides documentation

toc_footers:
  - <a href='https://github.com/tripit/slate'>Documentation Powered by Slate</a>

includes:
  - users
  - errors

search: true

endpoint: https://api.openwebslides.org/api/
---

# Introduction

Welcome to the Open Webslides documentation! This website documents the installation, use and API of the Open Webslides platform.

## Overview

The Open Webslides API is based on the JSON-API specification version 1.0. Under certain conditions, the API deviates from the spec or adds its own implementation when a procedure is not described in the specification, such as uploading binary files. For more examples and technical documentation, refer to the [JSON-API specification](http://jsonapi.org/format/1.0/) and the [implementation in use](http://jsonapi-resources.com/v0.9/guide/index.html). All API calls should use the `application/vnd.api+json` MIME type to exchange data.

The platform consists of two components: the backend and the frontend. The backend is written as a monolithic Ruby on Rails application, which exposes a RESTful API to the client. The frontend is written in React and consumes the RESTful API.

## Data model

<%= image_tag 'data_model.png' %>

# Setup for administrators

## Installation

```shell
$ git clone https://github.com/OpenWebslides/OpenWebslides.git
$ cd OpenWebslides
```

```shell
$ docker-compose up --build
```

```shell
$ docker-compose exec postgres psql -U postgres -c \
  "CREATE ROLE openwebslides WITH ENCRYPTED PASSWORD 'openwebslides' LOGIN;"
```

```shell
$ docker-compose exec postgres psql -U postgres -c \
  "CREATE DATABASE openwebslides OWNER openwebslides;"
```

```shell
$ docker-compose restart
```

The platform is built on the Docker container software, and uses the docker-compose utility to orchestrate the different services within the platform. This allows server administrators to run the platform as a contained package, without interfering with already installed system applications and libraries.

The machine-specific data is stored on several Docker volumes, mounted in the relevant containers.

Volume | Description
--------- | ------- | -----------
data | Contains the local repositories
postgres | Contains the PostgreSQL database
redis | Contains the Redis database
_public_ | Contains the publicly served assets (regenerated on every build)

Only the first three volumes contain mission-critical data and should be backed up. The _public_ volume is used by the nginx container to serve the static assets.

**Clone the repository**

Clone the [repository](https://github.com/OpenWebslides/OpenWebslides) to a local directory.

**Build and start the Docker containers**

Using docker-compose, start the various services.

**Create database credentials**

On the first run, the database will be empty. Create a user and put it in the `openwebslides.env` file.
Create a database for this user too and put it in the `openwebslides.env` file.

Finally, restart all services to use the new `openwebslides.env`. The platform is now available on <a href="http://localhost/">http://localhost/</a>

## Configuration

```shell
$ cp openwebslides.env.example openwebslides.env
```

The platform's features can be configured by customizing the `config/openwebslides.yml` file.
The deployment can be configured by copying the provided `openwebslides.env.example` to `openwebslides.env` and customizing this file. Docker-compose will then automatically use this file for the relevant containers.

## Backup

Persistent critical data is stored in the following systems:

- PostgreSQL: relational data, deck metadata
- `data/`: local repositories

Additional non-critical data is stored in the following systems:

- Redis: conversion queue
- `tmp/`: temporary runtime data, including uploaded files for conversion queue

# Authentication

```http
GET <%= current_page.data.endpoint %>users HTTP/1.1
Accept: application/vnd.api+json
Authorization: Bearer TOKEN
```

> Don't forget to replace `TOKEN` with the JWT obtained from the [Token API](#token-api)

```http
HTTP/1.1 200 OK
Content-Type: application/vnd.api+json
Content-Length: 138
```

The Open Webslides API uses [JSON Web Tokens](https://jwt.io/) as authentication mechanism. The API expects the token to be included in all API requests on protected endpoints as an `Authorization` header in the bearer token format. The token is only valid for a limited time, but a renewed token is available on every (successfully authenticated) response as an `Authorization` header.

<aside class="notice">
  You must replace the JWT with a JWT obtained from the <a href="#token-api">Token API</a>.
</aside>
