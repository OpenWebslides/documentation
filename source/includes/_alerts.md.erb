# Alerts API

## Get all user alerts

This endpoint retrieves all alerts for a given user. Please note that it is only allowed to retrieve alerts for the current user.

**Response attributes**

Attribute       |                 | Type    | Description
--------------- | --------------- | ------- | -----------
`alertType`     |                 | Enum    | Type of alert. See [alert types](#alert-types)
`read`          |                 | Boolean | Whether or not the alert was read by the user. Currently always `false`, cannot be modified
`count`         | <%= optional %> | Integer | Number of updates available on the topic (only available when type is `topic_updated`)
`createdAt`     |                 | Integer | Timestamp of the event. **This attribute is included in the `meta` section.**

**Response relationships**

Relationship    |                        | Type                     | Plurality | Description
--------------- | ---------------------- | ------------------------ | --------- | -----------
`user`          |                        | <code>User</code>        | 1         | User for which the alert was generated
`topic`         |                        | <code>Topic</code>       | 1         | Topic for which the alert was generated
`subject`       | <%= optional %>        | <code>User</code>        | 1         | User that submitted/accepted/rejected the pull request (only available when `alertType` is `pr_submitted`, `pr_accepted` or `pr_rejected`)
`pullRequest`   | <%= optional %>        | <code>PullRequest</code> | 1         | Pull request the alert is referring to (only available when `alertType` is `pr_submitted`, `pr_accepted` or `pr_rejected`)

<aside class="warning">
  This is a protected endpoint. A valid API token should be present in the <code>Authorization</code> header.
</aside>

<aside class="info">
  The <code>topic</code> relationship refers to the topic for which the alert was generated. In the case of <code>topic_updated</code> alert type, this is the fork for which the updates are available. In the case of <code>pr_*</code> alert types, this is the upstream topic for which a pull request has been submitted. It is equal to the pull request's <code>target</code> relationship.
</aside>

### Alert types

There are currently four alert types requiring the user's attention.

Alert type      | Description
--------------- | -----------
`topic_updated` | There are commits available on one of the user's topics' upstream
`pr_submitted`  | A pull request was submitted on one of the topics the user has access to
`pr_accepted`   | A pull request submitted by the user was accepted
`pr_rejected`   | A pull request submitted by the user was rejected

<aside class="info">
  As mentioned in the response attributes and relationships tables, all alert types will return the <code>alertType</code>, <code>read</code> and <code>createdAt</code> attributes, and the <code>user</code> relationship.
  <br />
  Additionally, the <code>topic_updated</code> alert type will also return the <code>count</code> attribute, and the <code>topic</code> relationship.
  <br />
  The pull request alert types will return the <code>subject</code> and <code>pullRequest</code> relationships.
</aside>

> Request

```http
GET <%= current_page.data.endpoint %>users/1/alerts HTTP/1.1
Accept: application/vnd.api+json, application/vnd.openwebslides+json; version=<%= current_page.data.version %>
Authorization: Bearer TOKEN
```

> Success response

```http
HTTP/1.1 200 OK
Content-Type: application/vnd.api+json
```

```json
<%= api_response 'alerts/get_user_alerts' %>
```

## Mark alert as read

This endpoint marks an alert as read.

**Request attributes**

Attribute       |                 | Type    | Description
--------------- | --------------- | ------- | -----------
`read`          | <%= required %> | Boolean | Read status, must be `true`

<aside class="warning">
  This is a protected endpoint. A valid API token should be present in the <code>Authorization</code> header.
</aside>


> Request

```http
PATCH <%= current_page.data.endpoint %>alerts/1 HTTP/1.1
Accept: application/vnd.api+json, application/vnd.openwebslides+json; version=<%= current_page.data.version %>
Content-Type: application/vnd.api+json
Authorization: Bearer TOKEN
```

```json
<%= api_request 'alerts/patch_alert' %>
```

> Success response

```http
HTTP/1.1 200 OK
Content-Type: application/vnd.api+json
```

```json
<%= api_response 'alerts/patch_alert' %>
```

> Failure response

```http
HTTP/1.1 422 Unprocessable Entity
Content-Type: application/vnd.api+json
```

```json
<%= api_response 'alerts/patch_alert_422' %>
```
